version: "3.7"

services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - logs:/logs

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - logs:/logs

  react-client:
    build:
      context: ./Client
      dockerfile: Dockerfile
    container_name: react-client
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    volumes:
      - logs:/logs

  dispatch_service:
    build:
      context: ./dispatch_service/src
      dockerfile: Dockerfile
    container_name: dispatch_service
    depends_on:
      - mongo
      - rabbitmq
    environment:
      MONGO_URL: mongodb://mongo:27017/your-db-name
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    volumes:
      - logs:/logs

  ingestion_service:
    build:
      context: ./ingestion_service/src
      dockerfile: Dockerfile
    container_name: ingestion_service
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MONGO_URL=mongodb://mongo:27017/your-db-name
      - RABBITMQ_URL= amqp://guest:guest@rabbitmq:5672/
    volumes:
      - logs:/logs

  processing_service:
    build:
      context: ./processing_service/src
      dockerfile: Dockerfile
    container_name: processing_service
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MONGO_URL=mongodb://mongo:27017/your-db-name
      - RABBITMQ_URL= amqp://guest:guest@rabbitmq:5672/
    volumes:
      - logs:/logs

  tracking_service:
    build:
      context: ./tracking_service/src
      dockerfile: Dockerfile
    container_name: tracking_service
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MONGO_URL=mongodb://mongo:27017/your-db-name
      - RABBITMQ_URL= amqp://guest:guest@rabbitmq:5672/
    volumes:
      - logs:/logs

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MONGO_URL=mongodb://mongo:27017/your-db-name
      - RABBITMQ_URL= amqp://guest:guest@rabbitmq:5672/
    volumes:
      - logs:/logs

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.0
    container_name: filebeat
    user: root
    command: >
      filebeat -e -strict.perms=false
    volumes:
      - logs:/logs
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    env_file:
      - .env
    depends_on:
      - server
      - dispatch_service
      - ingestion_service
      - processing_service
      - tracking_service
      - react-client

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    restart: always

volumes:
  mongo-data:
  rabbitmq-data:
  logs:
  minio-data:
